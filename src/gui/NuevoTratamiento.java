package gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import mundo.OperacionesHistoriaClinica;
import mundo.OperacionesTratamiento;
import mundo.Tratamiento;

/**
 *
 * @author Janus
 */
public class NuevoTratamiento extends JInternalFrame {

    /*
     * Creates new form NuevoPaciente
     */
    
    
    public NuevoTratamiento() {
        
        initComponents();
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setDefaultCloseOperation(JInternalFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TextID_Tratamiento = new javax.swing.JTextField();
        TextID_Historia = new javax.swing.JTextField();
        TextTratamiento = new javax.swing.JTextField();
        Guardar = new javax.swing.JButton();
        Buscar = new javax.swing.JButton();
        Mostrar = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        Modificar = new javax.swing.JButton();

        jToggleButton1.setText("jToggleButton1");

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Candara", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("TRATAMIENTO");

        jLabel3.setFont(new java.awt.Font("Candara", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("ID_TRATAMIENTO:");

        jLabel4.setFont(new java.awt.Font("Candara", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("ID_HISTORIA:");

        jLabel2.setFont(new java.awt.Font("Candara", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("TRATAMIENTO:");

        TextID_Tratamiento.setBackground(new java.awt.Color(255, 255, 255));
        TextID_Tratamiento.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        TextID_Tratamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextID_TratamientoActionPerformed(evt);
            }
        });

        TextID_Historia.setBackground(new java.awt.Color(255, 255, 255));
        TextID_Historia.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        TextID_Historia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextID_HistoriaActionPerformed(evt);
            }
        });

        TextTratamiento.setBackground(new java.awt.Color(255, 255, 255));
        TextTratamiento.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        TextTratamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextTratamientoActionPerformed(evt);
            }
        });

        Guardar.setBackground(new java.awt.Color(153, 204, 255));
        Guardar.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Guardar.setForeground(new java.awt.Color(0, 0, 0));
        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        Buscar.setBackground(new java.awt.Color(153, 204, 255));
        Buscar.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Buscar.setForeground(new java.awt.Color(0, 0, 0));
        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        Mostrar.setBackground(new java.awt.Color(153, 204, 255));
        Mostrar.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Mostrar.setForeground(new java.awt.Color(0, 0, 0));
        Mostrar.setText("Mostrar");
        Mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarActionPerformed(evt);
            }
        });

        Eliminar.setBackground(new java.awt.Color(255, 51, 51));
        Eliminar.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Eliminar.setForeground(new java.awt.Color(0, 0, 0));
        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        Modificar.setBackground(new java.awt.Color(153, 204, 255));
        Modificar.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Modificar.setForeground(new java.awt.Color(0, 0, 0));
        Modificar.setText("Modificar");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(40, 40, 40)
                                .addComponent(TextID_Tratamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TextID_Historia, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                                    .addComponent(TextTratamiento)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(331, 331, 331)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Mostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(TextID_Tratamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(TextID_Historia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(Guardar)
                                .addGap(32, 32, 32)
                                .addComponent(Modificar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(Buscar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(Mostrar)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TextTratamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Eliminar))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextID_TratamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextID_TratamientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextID_TratamientoActionPerformed

    private void TextID_HistoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextID_HistoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextID_HistoriaActionPerformed

    private void TextTratamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextTratamientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextTratamientoActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                String ID_Tratamiento = TextID_Tratamiento.getText().trim();
                String Tratamiento = TextTratamiento.getText().trim();
                String ID_Historia = TextID_Historia.getText().trim();

                // Verificar si hay campos vacíos
                if (ID_Tratamiento.isEmpty() || Tratamiento.isEmpty() || ID_Historia.isEmpty()) {
                    JOptionPane.showMessageDialog(null, " Por favor, completa todos los campos.");
                    return;
                }

                // Validar que el ID de la historia clínica exista
                if (OperacionesHistoriaClinica.obtenerHistoriaPorID(ID_Historia) == null) {
                    JOptionPane.showMessageDialog(null, " El ID de la historia clínica no existe.");
                    return;
                }

                // Crear el objeto Tratamiento
                Tratamiento nuevoTratamiento = new Tratamiento(Tratamiento, ID_Tratamiento, ID_Historia);

                // Guardar el tratamiento
                if (OperacionesTratamiento.guardar(nuevoTratamiento)) {
                    JOptionPane.showMessageDialog(null, " Tratamiento guardado correctamente.");

                    // Limpiar los campos
                    TextID_Tratamiento.setText("");
                    TextTratamiento.setText("");
                    TextID_Historia.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, " No se pudo guardar el tratamiento.");
                }
            }
        });
    }//GEN-LAST:event_GuardarActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Buscar.setEnabled(false); // Desactivar botón durante la búsqueda

                try {
                    String ID_Tratamiento = JOptionPane.showInputDialog(null, "Ingrese el ID del tratamiento:", "Buscar Tratamiento", JOptionPane.QUESTION_MESSAGE);

                    // Verificar si se ingresó un ID de tratamiento válido
                    if (ID_Tratamiento == null || ID_Tratamiento.trim().isEmpty()) {
                        JOptionPane.showMessageDialog(null, " ID de tratamiento vacío o búsqueda cancelada.");
                        return;
                    }

                    ID_Tratamiento = ID_Tratamiento.trim();
                    Tratamiento t = OperacionesTratamiento.obtenerTratamientoPorID(ID_Tratamiento);

                    if (t != null) {
                        // Llenar los campos del formulario con la información del tratamiento
                        TextID_Tratamiento.setText(t.getID_Tratamiento());
                        TextTratamiento.setText(t.getTratamiento());
                        TextID_Historia.setText(t.getID_Historia());

                        JOptionPane.showMessageDialog(null, " Tratamiento encontrado.");
                    } else {
                        JOptionPane.showMessageDialog(null, " Tratamiento no encontrado.");
                    }
                } finally {
                    Buscar.setEnabled(true); // Reactivar el botón
                }
            }
        });
    }//GEN-LAST:event_BuscarActionPerformed

    private void MostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarActionPerformed
        Mostrar.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Mostrar.setEnabled(false); // Desactivar el botón mientras se muestra la tabla

                // Crear la tabla de tratamientos
                JTable tabla = OperacionesTratamiento.crearTabla();

                // Crear un JScrollPane con la tabla
                javax.swing.JScrollPane scroll = new javax.swing.JScrollPane(tabla);
                scroll.setPreferredSize(new java.awt.Dimension(500, 300)); // Tamaño de la tabla dentro del JScrollPane

                // Mostrar la tabla en un JOptionPane
                JOptionPane.showMessageDialog(
                    null,
                    scroll,
                    " Lista de Tratamientos",
                    JOptionPane.INFORMATION_MESSAGE
                );

                // Reactivar el botón después de que se cierre el JOptionPane
                javax.swing.SwingUtilities.invokeLater(() -> {
                    Mostrar.setEnabled(true);
                });
            }
        });
    }//GEN-LAST:event_MostrarActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                String ID_Tratamiento = JOptionPane.showInputDialog(null, "Ingrese el ID del tratamiento a eliminar:", "Eliminar Tratamiento", JOptionPane.WARNING_MESSAGE);

                if (ID_Tratamiento == null || ID_Tratamiento.trim().isEmpty()) {
                    JOptionPane.showMessageDialog(null, " Operación cancelada o ID de tratamiento vacío.");
                    return;
                }

                ID_Tratamiento = ID_Tratamiento.trim();

                if (OperacionesTratamiento.buscar(ID_Tratamiento)) {
                    boolean eliminado = OperacionesTratamiento.eliminar(ID_Tratamiento);

                    if (eliminado) {
                        // Limpiar los campos del formulario
                        TextID_Tratamiento.setText("");
                        TextTratamiento.setText("");
                        TextID_Historia.setText("");

                        JOptionPane.showMessageDialog(null, " Tratamiento eliminado correctamente.");
                    } else {
                        JOptionPane.showMessageDialog(null, " No se pudo eliminar el tratamiento.");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, " Tratamiento no encontrado.");
                }
            }
        });
    }//GEN-LAST:event_EliminarActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        Modificar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                // Pedir el ID del tratamiento a modificar
                String ID_Tratamiento = JOptionPane.showInputDialog("Ingrese el ID del tratamiento a modificar:");

                if (ID_Tratamiento == null || ID_Tratamiento.trim().isEmpty()) return;

                // Buscar el tratamiento por su ID
                Tratamiento tratamiento = OperacionesTratamiento.obtenerTratamientoPorID(ID_Tratamiento.trim());

                if (tratamiento == null) {
                    JOptionPane.showMessageDialog(null, "Tratamiento no encontrado.");
                } else {
                    // Mostrar el ID actual y pedir el nuevo ID
                    String nuevoID = JOptionPane.showInputDialog("ID actual: " + tratamiento.getID_Tratamiento() + "\n\nIngrese el nuevo ID del tratamiento:");

                    if (nuevoID == null || nuevoID.trim().isEmpty()) {
                        JOptionPane.showMessageDialog(null, "El ID no puede estar vacío.");
                        return;
                    }

                    // Mostrar el tratamiento actual y pedir el nuevo
                    String nuevoTexto = JOptionPane.showInputDialog("Tratamiento actual: " + tratamiento.getTratamiento() + "\n\nIngrese el nuevo tratamiento:");

                    if (nuevoTexto == null || nuevoTexto.trim().isEmpty()) {
                        JOptionPane.showMessageDialog(null, "El tratamiento no puede estar vacío.");
                        return;
                    }

                    // Llamar al método para modificar en OperacionesTratamiento
                    boolean modificado = OperacionesTratamiento.Modificar(tratamiento.getID_Tratamiento(), nuevoID.trim(), nuevoTexto.trim());

                    if (modificado) {
                        JOptionPane.showMessageDialog(null, "Tratamiento modificado con éxito.");
                    } else {
                        JOptionPane.showMessageDialog(null, "No se pudo modificar el tratamiento.");
                    }
                }
            }
        });

    }//GEN-LAST:event_ModificarActionPerformed
public static void main(String args[]) {
java.awt.EventQueue.invokeLater(new Runnable() {
    public void run() {
        new NuevoTratamiento().setVisible(true);
    }
});
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JButton Eliminar;
    private javax.swing.JButton Guardar;
    private javax.swing.JButton Modificar;
    private javax.swing.JButton Mostrar;
    private javax.swing.JTextField TextID_Historia;
    private javax.swing.JTextField TextID_Tratamiento;
    private javax.swing.JTextField TextTratamiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
