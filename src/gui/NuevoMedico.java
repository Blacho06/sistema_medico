
package gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import mundo.Medico;
import mundo.OperacionesEspecialidad;
import mundo.OperacionesMedico;



public class NuevoMedico extends JInternalFrame {

    /**
     * Creates new form NuevoMedico
     */
    public NuevoMedico() {
        initComponents();
         setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setDefaultCloseOperation(JInternalFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        TextNombre_Medico = new javax.swing.JTextField();
        TextID_Especialidad = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        TextID_Medico = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Buscar = new javax.swing.JButton();
        Guardar = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        Mostrar = new javax.swing.JButton();
        Modificar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Candara", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("REGISTRAR MEDICO");

        TextNombre_Medico.setBackground(new java.awt.Color(255, 255, 255));
        TextNombre_Medico.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        TextNombre_Medico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextNombre_MedicoActionPerformed(evt);
            }
        });

        TextID_Especialidad.setBackground(new java.awt.Color(255, 255, 255));
        TextID_Especialidad.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        TextID_Especialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextID_EspecialidadActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Candara", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("ID_MEDICO: ");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("NOMBRE: ");

        TextID_Medico.setBackground(new java.awt.Color(255, 255, 255));
        TextID_Medico.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        TextID_Medico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextID_MedicoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("ID_ESPECIALIDAD: ");

        Buscar.setBackground(new java.awt.Color(153, 204, 255));
        Buscar.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Buscar.setForeground(new java.awt.Color(0, 0, 0));
        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        Guardar.setBackground(new java.awt.Color(153, 204, 255));
        Guardar.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Guardar.setForeground(new java.awt.Color(0, 0, 0));
        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        Eliminar.setBackground(new java.awt.Color(255, 51, 51));
        Eliminar.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Eliminar.setForeground(new java.awt.Color(0, 0, 0));
        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        Mostrar.setBackground(new java.awt.Color(153, 204, 255));
        Mostrar.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Mostrar.setForeground(new java.awt.Color(0, 0, 0));
        Mostrar.setText("Mostrar");
        Mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarActionPerformed(evt);
            }
        });

        Modificar.setBackground(new java.awt.Color(153, 204, 255));
        Modificar.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Modificar.setForeground(new java.awt.Color(0, 0, 0));
        Modificar.setText("Modificar");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(TextNombre_Medico, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                                    .addComponent(TextID_Medico, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TextID_Especialidad)))))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Modificar, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(Buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Mostrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TextID_Medico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Buscar))
                .addGap(35, 35, 35)
                .addComponent(Guardar)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextNombre_Medico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(95, 95, 95)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(TextID_Especialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(31, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Modificar)
                        .addGap(40, 40, 40)
                        .addComponent(Mostrar)
                        .addGap(48, 48, 48)
                        .addComponent(Eliminar)
                        .addGap(26, 26, 26))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextID_MedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextID_MedicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextID_MedicoActionPerformed

    private void TextID_EspecialidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextID_EspecialidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextID_EspecialidadActionPerformed

    private void TextNombre_MedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextNombre_MedicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextNombre_MedicoActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
    Guardar.addActionListener(new java.awt.event.ActionListener() {
    @Override
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        String ID_Medico = TextID_Medico.getText().trim();
        String Nombre_Medico = TextNombre_Medico.getText().trim();
        String ID_Especialidad = TextID_Especialidad.getText().trim();

        if (ID_Medico.isEmpty() || Nombre_Medico.isEmpty() || ID_Especialidad.isEmpty()) {
            JOptionPane.showMessageDialog(null, "️Por favor, completa todos los campos.");
            return;
        }

        if (OperacionesEspecialidad.obtenerEspecialidadPorID(ID_Especialidad) == null) {
            JOptionPane.showMessageDialog(null, "El ID_Especialidad no existe.");
            return;
        }

        if (OperacionesMedico.obtenerMedicoPorID(ID_Medico) != null) {
            JOptionPane.showMessageDialog(null, "Ya existe un médico con ese ID_Medico.");
            return;
        }

        Medico nuevoMedico = new Medico(ID_Medico, Nombre_Medico, ID_Especialidad);
        OperacionesMedico.guardar(nuevoMedico);

        JOptionPane.showMessageDialog(null, "Médico guardado correctamente.");

        // Limpiar campos
        TextID_Medico.setText("");
        TextNombre_Medico.setText("");
        TextID_Especialidad.setText("");
    }
});



    }//GEN-LAST:event_GuardarActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
    Buscar.addActionListener(new java.awt.event.ActionListener() {
    @Override
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        String ID_Medico = JOptionPane.showInputDialog(null, "Ingrese el ID_Medico a buscar:", "Buscar Médico", JOptionPane.QUESTION_MESSAGE);

        if (ID_Medico == null || ID_Medico.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "️ No ingresaste ningún ID_Medico.");
            return;
        }

        ID_Medico = ID_Medico.trim();
        Medico medico = OperacionesMedico.obtenerMedicoPorID(ID_Medico);

        if (medico != null) {
            TextID_Medico.setText(medico.getID_Medico());
            TextNombre_Medico.setText(medico.getNombre_Medico());
            TextID_Especialidad.setText(medico.getID_Especialidad());
            JOptionPane.showMessageDialog(null, " Médico encontrado.");
        } else {
            JOptionPane.showMessageDialog(null, " Médico no encontrado.");
        }
    }
});


    }//GEN-LAST:event_BuscarActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
    Eliminar.addActionListener(new java.awt.event.ActionListener() {
    @Override
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        String ID_Medico = JOptionPane.showInputDialog(null, "Ingrese el ID_Medico a eliminar:");

        if (ID_Medico == null || ID_Medico.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "️ Operación cancelada o ID_Medico vacío.");
            return;
        }

        ID_Medico = ID_Medico.trim();
        boolean eliminado = OperacionesMedico.eliminarMedicoPorID(ID_Medico);

        if (eliminado) {
            JOptionPane.showMessageDialog(null, " Médico eliminado correctamente.");

            // Limpiar campos del formulario
            TextID_Medico.setText("");
            TextNombre_Medico.setText("");
            TextID_Especialidad.setText("");
        } else {
            JOptionPane.showMessageDialog(null, " Médico no encontrado.");
        }
    }
});



    }//GEN-LAST:event_EliminarActionPerformed

    private void MostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarActionPerformed
    Mostrar.addActionListener(new java.awt.event.ActionListener() {
    @Override
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        Mostrar.setEnabled(false); // Desactivar botón mientras se muestra

        try {
            JTable tabla = OperacionesMedico.crearTablaMedicos();

            javax.swing.JScrollPane scroll = new javax.swing.JScrollPane(tabla);
            scroll.setPreferredSize(new java.awt.Dimension(650, 300));
            scroll.setBorder(null); 

            JOptionPane.showMessageDialog(null, scroll, " Médicos Registrados", JOptionPane.INFORMATION_MESSAGE);
        } finally {
            Mostrar.setEnabled(true); // Reactivar después de mostrar
        }
    }
});


    }//GEN-LAST:event_MostrarActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
    Modificar.addActionListener(new ActionListener() {
    public void actionPerformed(ActionEvent e) {
        // Recuperar el ID del médico a modificar
        String ID_Medico = JOptionPane.showInputDialog("Ingrese el ID del médico a modificar:");

        if (ID_Medico == null || ID_Medico.trim().isEmpty()) return;

        // Buscar el médico por su ID
        Medico medico = OperacionesMedico.obtenerMedicoPorID(ID_Medico.trim());

        if (medico == null) {
            JOptionPane.showMessageDialog(null, "Médico no encontrado.");
        } else {
            // Pedir nuevo ID del médico
            String nuevoID = JOptionPane.showInputDialog("ID actual: " + medico.getID_Medico() + "\n\nIngrese el nuevo ID del médico:");

            if (nuevoID == null || nuevoID.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "El ID no puede estar vacío.");
                return;
            }

            // Pedir nuevo nombre del médico
            String nuevoNombre = JOptionPane.showInputDialog("Nombre actual: " + medico.getNombre_Medico() + "\n\nIngrese el nuevo nombre:");

            if (nuevoNombre == null || nuevoNombre.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "El nombre no puede estar vacío.");
                return;
            }

            // Llamar al método para modificar el médico
            boolean modificado = OperacionesMedico.Modificar(medico.getID_Medico(), nuevoID.trim(), nuevoNombre.trim());

            if (modificado) {
                JOptionPane.showMessageDialog(null, "Médico modificado con éxito.");
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo modificar el médico.");
            }
        }
    }
});



    }//GEN-LAST:event_ModificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevoMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevoMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevoMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevoMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NuevoMedico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JButton Eliminar;
    private javax.swing.JButton Guardar;
    private javax.swing.JButton Modificar;
    private javax.swing.JButton Mostrar;
    private javax.swing.JTextField TextID_Especialidad;
    private javax.swing.JTextField TextID_Medico;
    private javax.swing.JTextField TextNombre_Medico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
