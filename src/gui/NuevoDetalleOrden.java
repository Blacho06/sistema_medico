
package gui;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import mundo.DetallesOrden;
import mundo.OperacionesDetallesOrden;
import mundo.OperacionesOrden;

/**
 *
 * @author Janus
 */

public class NuevoDetalleOrden extends JInternalFrame {

    /**
     * Creates new form NuevoPaciente
     */
    
    
    public NuevoDetalleOrden() {
        
        initComponents();
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setDefaultCloseOperation(JInternalFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TextID_Detalles = new javax.swing.JTextField();
        TextDescripcion = new javax.swing.JTextField();
        TextID_Orden = new javax.swing.JTextField();
        Guardar = new javax.swing.JButton();
        Buscar = new javax.swing.JButton();
        Mostrar = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        Modificar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Candara", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("DETALLE DE ORDEN MEDICA");

        jLabel2.setFont(new java.awt.Font("Candara", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Descripcion");

        jLabel3.setFont(new java.awt.Font("Candara", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("ID_Detalle");

        jLabel4.setFont(new java.awt.Font("Candara", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("ID_Orden");

        TextID_Detalles.setBackground(new java.awt.Color(255, 255, 255));
        TextID_Detalles.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        TextID_Detalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextID_DetallesActionPerformed(evt);
            }
        });

        TextDescripcion.setBackground(new java.awt.Color(255, 255, 255));
        TextDescripcion.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        TextDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextDescripcionActionPerformed(evt);
            }
        });

        TextID_Orden.setBackground(new java.awt.Color(255, 255, 255));
        TextID_Orden.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        TextID_Orden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextID_OrdenActionPerformed(evt);
            }
        });

        Guardar.setBackground(new java.awt.Color(153, 204, 255));
        Guardar.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Guardar.setForeground(new java.awt.Color(0, 0, 0));
        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        Buscar.setBackground(new java.awt.Color(153, 204, 255));
        Buscar.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Buscar.setForeground(new java.awt.Color(0, 0, 0));
        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        Mostrar.setBackground(new java.awt.Color(153, 204, 255));
        Mostrar.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Mostrar.setForeground(new java.awt.Color(0, 0, 0));
        Mostrar.setText("Mostrar");
        Mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarActionPerformed(evt);
            }
        });

        Eliminar.setBackground(new java.awt.Color(255, 51, 51));
        Eliminar.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Eliminar.setForeground(new java.awt.Color(0, 0, 0));
        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        Modificar.setBackground(new java.awt.Color(153, 204, 255));
        Modificar.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Modificar.setForeground(new java.awt.Color(0, 0, 0));
        Modificar.setText("Modificar");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(jLabel1)
                .addContainerGap(132, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(34, 34, 34)
                        .addComponent(TextDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TextID_Detalles, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                            .addComponent(TextID_Orden))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(Eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Modificar, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(Mostrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(TextID_Detalles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(73, 73, 73)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(TextID_Orden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Buscar)
                        .addGap(34, 34, 34)
                        .addComponent(Guardar)
                        .addGap(36, 36, 36)
                        .addComponent(Modificar)
                        .addGap(34, 34, 34)))
                .addComponent(Mostrar)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(TextDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(Eliminar)
                        .addGap(22, 22, 22))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextID_DetallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextID_DetallesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextID_DetallesActionPerformed

    private void TextDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextDescripcionActionPerformed

    private void TextID_OrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextID_OrdenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextID_OrdenActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
    Guardar.addActionListener(new java.awt.event.ActionListener() {
    @Override
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        String ID_Detalles = TextID_Detalles.getText().trim();
        String ID_Orden = TextID_Orden.getText().trim();
        String Descripcion = TextDescripcion.getText().trim();

        // 🔎 Verificar campos vacíos
        if (ID_Detalles.isEmpty() || ID_Orden.isEmpty() || Descripcion.isEmpty()) {
            JOptionPane.showMessageDialog(null, "️ Por favor, completa todos los campos.");
            return;
        }

        // 🔁 Validación de duplicado de detalles de orden
        if (OperacionesDetallesOrden.obtenerDetallesOrdenPorID(ID_Detalles) != null) {
            JOptionPane.showMessageDialog(null, " Ya existe un detalle de orden con ese ID.");
            return;
        }

        // 🔍 Validar existencia de orden
        if (OperacionesOrden.obtenerOrdenPorID(ID_Orden) == null) {
            JOptionPane.showMessageDialog(null, " El ID de la orden no existe.");
            return;
        }

        // ✅ Crear y guardar el detalle de orden
        DetallesOrden nuevoDetalle = new DetallesOrden(ID_Detalles, ID_Orden, Descripcion);
        OperacionesDetallesOrden.guardar(nuevoDetalle);

        JOptionPane.showMessageDialog(null, " Detalle de orden guardado correctamente.");

        // 🧹 Limpiar campos
        TextID_Detalles.setText("");
        TextID_Orden.setText("");
        TextDescripcion.setText("");
    }
});


    }//GEN-LAST:event_GuardarActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
    Buscar.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        String ID_Detalles = JOptionPane.showInputDialog(null, "🔎 Ingresa el ID del detalle de la orden a buscar:");

        if (ID_Detalles != null && !ID_Detalles.trim().isEmpty()) {
            if (OperacionesDetallesOrden.buscar(ID_Detalles.trim())) {
                DetallesOrden detalleEncontrado = OperacionesDetallesOrden.obtenerDetallesOrdenPorID(ID_Detalles);

                TextID_Detalles.setText(detalleEncontrado.getID_Detalles());
                TextID_Orden.setText(detalleEncontrado.getID_Orden());
                TextDescripcion.setText(detalleEncontrado.getDescripcion());

                JOptionPane.showMessageDialog(null, " Detalle de orden encontrado y mostrado.");
            } else {
                JOptionPane.showMessageDialog(null, " Detalle de orden no encontrado.");
            }
        } else {
            JOptionPane.showMessageDialog(null, " Debes ingresar un ID de detalle de orden válido.");
        }
    }
});

    }//GEN-LAST:event_BuscarActionPerformed

    private void MostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarActionPerformed
    Mostrar.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        JTable tabla = OperacionesDetallesOrden.crearTablaDetallesOrden();
        JScrollPane scrollPane = new JScrollPane(tabla);
        JOptionPane.showMessageDialog(null, scrollPane, "Lista de Detalles de Orden", JOptionPane.INFORMATION_MESSAGE);
    }
});

    }//GEN-LAST:event_MostrarActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
    Eliminar.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        String ID_Detalles = JOptionPane.showInputDialog(null, "️ Ingresa el ID del detalle de la orden a eliminar:");

        if (ID_Detalles != null && !ID_Detalles.trim().isEmpty()) {
            if (OperacionesDetallesOrden.eliminarDetallesOrdenPorID(ID_Detalles.trim())) {
                JOptionPane.showMessageDialog(null, " Detalle de orden eliminado correctamente.");

                // Limpiar los campos
                TextID_Detalles.setText("");
                TextID_Orden.setText("");
                TextDescripcion.setText("");
            } else {
                JOptionPane.showMessageDialog(null, " Detalle de orden no encontrado.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "️ Debes ingresar un ID de detalle de orden válido.");
        }
    }
});


    }//GEN-LAST:event_EliminarActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
    Modificar.addActionListener(new ActionListener() {
    public void actionPerformed(ActionEvent e) {
        // Solicitar el ID del detalle a modificar
        String ID_Detalles = JOptionPane.showInputDialog("Ingrese el ID del detalle de orden a modificar:");

        if (ID_Detalles == null || ID_Detalles.trim().isEmpty()) return;

        // Buscar el detalle por su ID
        DetallesOrden detalle = OperacionesDetallesOrden.obtenerDetallesOrdenPorID(ID_Detalles.trim());

        if (detalle == null) {
            JOptionPane.showMessageDialog(null, "Detalle de orden no encontrado.");
        } else {
            // Solicitar los nuevos valores
            String nuevoID = JOptionPane.showInputDialog("ID actual: " + detalle.getID_Detalles() + "\n\nIngrese el nuevo ID del detalle:");
            if (nuevoID == null || nuevoID.trim().isEmpty()) return;

            String nuevaDescripcion = JOptionPane.showInputDialog("Descripción actual: " + detalle.getDescripcion() + "\n\nIngrese la nueva descripción:");
            if (nuevaDescripcion == null || nuevaDescripcion.trim().isEmpty()) return;

            // Llamar al método para modificar
            boolean modificado = OperacionesDetallesOrden.Modificar(ID_Detalles.trim(), nuevoID.trim(), nuevaDescripcion.trim());

            if (modificado) {
                JOptionPane.showMessageDialog(null, "Detalle de orden modificado con éxito.");
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo modificar el detalle.");
            }
        }
    }
});
      
    }//GEN-LAST:event_ModificarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JButton Eliminar;
    private javax.swing.JButton Guardar;
    private javax.swing.JButton Modificar;
    private javax.swing.JButton Mostrar;
    private javax.swing.JTextField TextDescripcion;
    private javax.swing.JTextField TextID_Detalles;
    private javax.swing.JTextField TextID_Orden;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
